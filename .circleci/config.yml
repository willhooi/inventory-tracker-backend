version: 2.1

orbs:
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0

jobs:
  #1. Build the Java app
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}
            - maven-
      - run:
          name: Resolve deps (offline)
          command: mvn -B -q -DskipTests dependency:go-offline
      - run:
          name: Package (skip tests)
          command: mvn -B -q -DskipTests package
      - save_cache:
          key: maven-{{ checksum "pom.xml" }}
          paths: [ "~/.m2" ]
      - persist_to_workspace:
          root: .
          paths: [ "." ]
          
  #2. Test
  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run getProductByIdTest
          command: >
            mvn -B -q
            -Dspring.profiles.active=test
            -Dtest='com.simple_inventory_tracker.project.controller.ProductControllerTest#getProductByIdTest'
            test
      - run:
          name: Run validProductCreationTest
          command: >
            mvn -B -q
            -Dspring.profiles.active=test
            -Dtest='com.simple_inventory_tracker.project.controller.ProductControllerTest#validProductCreationTest'
            test
      - run:
          name: Run invalidProductCreationTest
          command: >
            mvn -B -q
            -Dspring.profiles.active=test
            -Dtest='com.simple_inventory_tracker.project.controller.ProductControllerTest#invalidProductCreationTest'
            test

  #3. Build Docker image -> Docker Hub
  docker_build:
    docker:
      - image: cimg/base:stable
    environment:
      IMAGE_NAME: willhooi/inventory-tracker
      IMAGE_TAG: << pipeline.git.revision >>
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run: 
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:$IMAGE_TAG .
      # - run:
      #     name: Push to Docker hub
      #     command: docker push $IMAGE_NAME:$IMAGE_TAG
  
  #4. Deploy to Heroku
  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container push
          command: |
            heroku container:login
            heroku stack:set container -a sctp-inventory-tracker
            heroku container:push web -a sctp-inventory-tracker
            heroku container:release web -a sctp-inventory-tracker

workflows:
  ci_and_cd:
    jobs:
      # Build Java app on both develop and release
      - build:
          filters:
            branches:
              only:
                - develop
                - release

      # Run test after build on both branches
      - test:
          requires:
            - build 
          filters:
            branches:
              only:
                - develop
                - release

      # Docker build only on release & if tests passed
      - docker_build:
          requires:
            - test
          filters:
            branches:
              only: release
      
      # Docker deploy to Heroku only on release & if docker_build successful
      - deploy:
          requires:
            - docker_build
          filters:
            branches:
              only: release

      # Run Synk vulnerability scan after build